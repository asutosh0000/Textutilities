[{"E:\\2023\\React Js\\Textutiles\\src\\index.js":"1","E:\\2023\\React Js\\Textutiles\\src\\App.js":"2","E:\\2023\\React Js\\Textutiles\\src\\reportWebVitals.js":"3","E:\\2023\\React Js\\Textutiles\\src\\components\\Navbar.js":"4","E:\\2023\\React Js\\Textutiles\\src\\components\\TextForm.js":"5","E:\\2023\\React Js\\Textutiles\\src\\components\\About.js":"6","E:\\2023\\React Js\\Textutiles\\src\\components\\Alert.js":"7","E:\\React JS\\Textutilities\\src\\index.js":"8","E:\\React JS\\Textutilities\\src\\reportWebVitals.js":"9","E:\\React JS\\Textutilities\\src\\App.js":"10","E:\\React JS\\Textutilities\\src\\components\\Alert.js":"11","E:\\React JS\\Textutilities\\src\\components\\TextForm.js":"12","E:\\React JS\\Textutilities\\src\\components\\About.js":"13","E:\\React JS\\Textutilities\\src\\components\\Navbar.js":"14"},{"size":535,"mtime":1695360564083,"results":"15","hashOfConfig":"16"},{"size":1253,"mtime":1701491388690,"results":"17","hashOfConfig":"16"},{"size":362,"mtime":1695360565060,"results":"18","hashOfConfig":"16"},{"size":2549,"mtime":1701271563635,"results":"19","hashOfConfig":"16"},{"size":2339,"mtime":1701491150678,"results":"20","hashOfConfig":"16"},{"size":4760,"mtime":1701179811914,"results":"21","hashOfConfig":"16"},{"size":579,"mtime":1701491335073,"results":"22","hashOfConfig":"16"},{"size":535,"mtime":1695360564083,"results":"23","hashOfConfig":"24"},{"size":362,"mtime":1695360565060,"results":"25","hashOfConfig":"24"},{"size":1802,"mtime":1701675704030,"results":"26","hashOfConfig":"24"},{"size":579,"mtime":1701491335073,"results":"27","hashOfConfig":"24"},{"size":2339,"mtime":1701491150678,"results":"28","hashOfConfig":"24"},{"size":4760,"mtime":1701179811914,"results":"29","hashOfConfig":"24"},{"size":3211,"mtime":1701676370822,"results":"30","hashOfConfig":"24"},{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"733fpb",{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},"d2gpwr",{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62"},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"55"},{"filePath":"73","messages":"74","suppressedMessages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76"},"E:\\2023\\React Js\\Textutiles\\src\\index.js",[],[],"E:\\2023\\React Js\\Textutiles\\src\\App.js",["77"],[],"E:\\2023\\React Js\\Textutiles\\src\\reportWebVitals.js",[],[],"E:\\2023\\React Js\\Textutiles\\src\\components\\Navbar.js",["78"],[],"E:\\2023\\React Js\\Textutiles\\src\\components\\TextForm.js",[],[],"E:\\2023\\React Js\\Textutiles\\src\\components\\About.js",["79"],[],"E:\\2023\\React Js\\Textutiles\\src\\components\\Alert.js",[],[],"E:\\React JS\\Textutilities\\src\\index.js",[],[],[],"E:\\React JS\\Textutilities\\src\\reportWebVitals.js",[],[],"E:\\React JS\\Textutilities\\src\\App.js",["80"],[],"import './App.css';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\n// import About from './components/About';\nimport { useState } from 'react';\nimport Alert from './components/Alert';\nimport React from 'react';\nimport * as ReactDOM from \"react-dom/client\";\n\n// import {\n//   BrowserRouter as Router,\n//   Routes,\n//   Route,\n//   Link,\n// } from \"react-router-dom\";\n\nfunction App() {\n  // Defining the useState\n  const [mode, setMode] = useState('light');\n  const [alert, setAlert] = useState(null);\n\n  //Defining all the methods\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type\n    })\n    setTimeout(() => {\n      setAlert(null);\n    }, 2000);\n  }\n  const toggleMode = () => {\n    if (mode === 'light') {\n      setMode('dark');\n      document.body.style.backgroundColor = '#042743';\n      showAlert(\"Dark mode has been set\", 'success');\n    } else {\n      setMode('light');\n      document.body.style.backgroundColor = 'white';\n      showAlert(\"Light mode has been set\", 'success');\n    }\n  }\n  return (\n    <>\n      <Navbar title=\"Nextutils\" mode={mode} toggleMode={toggleMode} />\n      <Alert alert={alert} />\n      <div className=\"container\">\n      <TextForm showAlert={showAlert} heading=\"Enter the text to convert to uppercase\" />\n        {/* <Router> */}\n          {/* <div ><Link to='/textform'>textform</Link></div> */}\n          {/* <Link to='/about'>About</Link> */}\n\n          {/* <Routes> */}\n            {/* <Route path='/textform' element={<TextForm showAlert={showAlert} mode={mode} heading=\"Enter the text to convert to uppercase\" />} />\n          {<Route path='/about' element={<About />} />} */}\n\n          {/* </Routes> */}\n        {/* </Router> */}\n\n      </div>\n    </>\n  )\n}\n\nexport default App;","E:\\React JS\\Textutilities\\src\\components\\Alert.js",[],[],"E:\\React JS\\Textutilities\\src\\components\\TextForm.js",[],[],"E:\\React JS\\Textutilities\\src\\components\\About.js",["81"],[],"import React, { useState } from 'react'\r\n\r\nexport default function About() {\r\n    const [myStyle, setmyStyle] = useState({\r\n        color: 'black',\r\n        backgroundColor: 'white'\r\n    })\r\n    const [BtnText, setBtnText] = useState(\"Dark Mode\")\r\n    const toggleStyle = () => {\r\n        if (myStyle.color == 'black') {\r\n            setmyStyle({\r\n                color: 'white',\r\n                backgroundColor: 'black'\r\n            })\r\n            setBtnText(\"Bright mode\");\r\n        }\r\n        else {\r\n            setmyStyle({\r\n                color: 'black',\r\n                backgroundColor: 'white'\r\n            })\r\n            setBtnText(\"Dark mode\");\r\n        }\r\n    }\r\n    return (\r\n        <div className='container' style={myStyle}>\r\n            <h1>About us </h1>\r\n            <div className=\"accordion\" id=\"accordionExample\">\r\n                <div className=\"accordion-item\" style={myStyle}>\r\n                    <h2 className=\"accordion-header\">\r\n                        <button className=\"accordion-button\" type=\"button\" style={myStyle} data-bs-toggle=\"collapse\" data-bs-target=\"#collapseOne\" aria-expanded=\"true\" aria-controls=\"collapseOne\">\r\n                            Accordion Item #1\r\n                        </button>\r\n                    </h2>\r\n                    <div id=\"collapseOne\" className=\"accordion-collapse collapse show\" data-bs-parent=\"#accordionExample\">\r\n                        <div className=\"accordion-body\">\r\n                            <strong>This is the first item's accordion body.</strong> It is shown by default, until the collapse plugin adds the appropriate classNamees that we use to style each element. These classNamees control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"accordion-item\" style={myStyle}>\r\n                    <h2 className=\"accordion-header\">\r\n                        <button className=\"accordion-button collapsed\" style={myStyle} type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseTwo\" aria-expanded=\"false\" aria-controls=\"collapseTwo\">\r\n                            Accordion Item #2\r\n                        </button>\r\n                    </h2>\r\n                    <div id=\"collapseTwo\" className=\"accordion-collapse collapse\" data-bs-parent=\"#accordionExample\">\r\n                        <div className=\"accordion-body\">\r\n                            <strong>This is the second item's accordion body.</strong> It is hidden by default, until the collapse plugin adds the appropriate classNamees that we use to style each element. These classNamees control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"accordion-item\" style={myStyle}>\r\n                    <h2 className=\"accordion-header\" >\r\n                        <button className=\"accordion-button collapsed\" style={myStyle} type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseThree\" aria-expanded=\"false\" aria-controls=\"collapseThree\">\r\n                            Accordion Item #3\r\n                        </button>\r\n                    </h2>\r\n                    <div id=\"collapseThree\" className=\"accordion-collapse collapse\" data-bs-parent=\"#accordionExample\">\r\n                        <div className=\"accordion-body\">\r\n                            <strong>This is the third item's accordion body.</strong> It is hidden by default, until the collapse plugin adds the appropriate classNamees that we use to style each element. These classNamees control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"container my-3\">\r\n                <button onClick={toggleStyle} type=\"button\" className=\"btn btn-outline-primary\">{BtnText}</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","E:\\React JS\\Textutilities\\src\\components\\Navbar.js",["82","83","84","85"],[],"import React from 'react';\r\nimport PropTypes from 'prop-types'\r\n// import { Link } from \"react-router-dom\";\r\n// import {\r\n//   Outlet,\r\n//   NavLink,\r\n//   useLoaderData,\r\n//   Form,\r\n//   redirect,\r\n// } from \"react-router-dom\";\r\nexport default function Navbar(props) {\r\n  return (\r\n    <>\r\n      <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode} `}>\r\n        <div className=\"container-fluid\">\r\n          <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\r\n          <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n\r\n              <li className=\"nav-item\">\r\n                <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a>\r\n              </li>\r\n\r\n\r\n              <li className=\"nav-item\">\r\n                <a className=\"nav-link active\" aria-current=\"page\" href=\"/textform\">textform</a>\r\n              </li>\r\n              {/* <li className=\"nav-item\">\r\n                <a className=\"nav-link active\" aria-current=\"page\" href='/about'>About</a>\r\n              </li> */}\r\n\r\n\r\n\r\n              <li className=\"nav-item\">\r\n                <a className=\"nav-link\" href=\"/\">Link</a>\r\n              </li>\r\n\r\n              <li className=\"nav-item dropdown\">\r\n              <a className=\"nav-link dropdown-toggle\" href=\"/\" role=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n                Dropdown\r\n              </a>\r\n              <ul className=\"dropdown-menu\">\r\n                <li><a className=\"dropdown-item\" href=\"/\">Action</a></li>\r\n                <li><a className=\"dropdown-item\" href=\"/\">Another action</a></li>\r\n                <li><hr className=\"dropdown-divider\" /></li>\r\n                <li><a className=\"dropdown-item\" href=\"/\">Something else here</a></li>\r\n              </ul>\r\n            </li>\r\n              <li className=\"nav-item\">\r\n              <a className=\"nav-link disabled\"  href='#'>{props.about}</a>\r\n            </li>\r\n            </ul>\r\n            <form className=\"d-flex\" role=\"search\">\r\n            <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" />\r\n            <button className=\"btn btn-outline-success\" type=\"submit\">Search</button>\r\n          </form>\r\n            <div className=\"form-check form-switch mx-3\">\r\n              <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\" />\r\n              <label className={`form-check-label text-${props.mode === 'light' ? 'dark' : 'light'}`} htmlFor=\"flexSwitchCheckDefault\">Theam</label>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    </>\r\n  )\r\n}\r\n\r\n// Navbar.propTypes = {\r\n//   title: PropTypes.string.isRequired,\r\n//   about: PropTypes.string\r\n// }\r\n// Navbar.defaultProps = {\r\n//   title: \"Set title hear\",\r\n//   about: \"About page hear\"\r\n// }",{"ruleId":"86","severity":1,"message":"87","line":1,"column":8,"nodeType":"88","messageId":"89","endLine":1,"endColumn":12},{"ruleId":"90","severity":1,"message":"91","line":32,"column":13,"nodeType":"92","endLine":32,"endColumn":67},{"ruleId":"93","severity":1,"message":"94","line":10,"column":27,"nodeType":"95","messageId":"96","endLine":10,"endColumn":29},{"ruleId":"86","severity":1,"message":"97","line":8,"column":13,"nodeType":"88","messageId":"89","endLine":8,"endColumn":21},{"ruleId":"93","severity":1,"message":"94","line":10,"column":27,"nodeType":"95","messageId":"96","endLine":10,"endColumn":29},{"ruleId":"86","severity":1,"message":"98","line":2,"column":8,"nodeType":"88","messageId":"89","endLine":2,"endColumn":17},{"ruleId":"90","severity":1,"message":"99","line":16,"column":11,"nodeType":"92","endLine":16,"endColumn":48},{"ruleId":"90","severity":1,"message":"99","line":24,"column":17,"nodeType":"92","endLine":24,"endColumn":77},{"ruleId":"90","severity":1,"message":"99","line":53,"column":15,"nodeType":"92","endLine":53,"endColumn":58},"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'ReactDOM' is defined but never used.","'PropTypes' is defined but never used.","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md"]