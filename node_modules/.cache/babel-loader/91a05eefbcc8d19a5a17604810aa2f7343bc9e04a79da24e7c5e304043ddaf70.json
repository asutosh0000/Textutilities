{"ast":null,"code":"var _jsxFileName = \"E:\\\\React JS\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\nimport About from './components/About';\nimport { useState } from 'react';\nimport Alert from './components/Alert';\nimport React from 'react';\nimport * as ReactDOM from \"react-dom/client\";\nimport { BrowserRouter as Router, Switch, Route, Routes, Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // Defining the useState\n  const [mode, setMode] = useState('light');\n  const [alert, setAlert] = useState(null);\n\n  //Defining all the methods\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type\n    });\n    setTimeout(() => {\n      setAlert(null);\n    }, 2000);\n  };\n  const toggleMode = () => {\n    if (mode === 'light') {\n      setMode('dark');\n      document.body.style.backgroundColor = '#042743';\n      showAlert(\"Dark mode has been set\", 'success');\n    } else {\n      setMode('light');\n      document.body.style.backgroundColor = 'white';\n      showAlert(\"Light mode has been set\", 'success');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Navbar, {\n        title: \"Nextutils\",\n        mode: mode,\n        toggleMode: toggleMode\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Alert, {\n        alert: alert\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: [/*#__PURE__*/_jsxDEV(Switch, {\n          children: /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/about\",\n            children: /*#__PURE__*/_jsxDEV(About, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(TextForm, {\n          showAlert: showAlert,\n          mode: mode,\n          heading: \"Enter the text to convert to uppercase\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(About, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n}\n_s(App, \"yynMwYg97c38tJfP/35WTBv6oDs=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Navbar","TextForm","About","useState","Alert","React","ReactDOM","BrowserRouter","Router","Switch","Route","Routes","Link","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","mode","setMode","alert","setAlert","showAlert","message","type","msg","setTimeout","toggleMode","document","body","style","backgroundColor","children","title","fileName","_jsxFileName","lineNumber","columnNumber","className","path","heading","_c","$RefreshReg$"],"sources":["E:/React JS/src/App.js"],"sourcesContent":["import './App.css';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\nimport About from './components/About';\nimport { useState } from 'react';\nimport Alert from './components/Alert';\nimport React from 'react';\nimport * as ReactDOM from \"react-dom/client\";\n\nimport {BrowserRouter as Router, Switch, Route,Routes, Link} from \"react-router-dom\"\nfunction App() {\n  // Defining the useState\n  const [mode, setMode] = useState('light');\n  const [alert, setAlert] = useState(null);\n\n  //Defining all the methods\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type\n    })\n    setTimeout(() => {\n      setAlert(null);\n    }, 2000);\n  }\n  const toggleMode = () => {\n    if (mode === 'light') {\n      setMode('dark');\n      document.body.style.backgroundColor = '#042743';\n      showAlert(\"Dark mode has been set\", 'success');\n    } else {\n      setMode('light');\n      document.body.style.backgroundColor = 'white';\n      showAlert(\"Light mode has been set\", 'success');\n    }\n  }\n  return (\n    <>\n    <Routes>\n      <Navbar title=\"Nextutils\" mode={mode} toggleMode={toggleMode} />\n      <Alert alert={alert} />\n      <div className=\"container\">\n        <Switch>\n          <Route path =\"/about\">\n            <About/>\n          </Route>\n        </Switch>\n        <TextForm showAlert={showAlert} mode={mode} heading=\"Enter the text to convert to uppercase\" />\n      </div>\n      <About />\n      </Routes>\n    </>\n  )\n}\n\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}